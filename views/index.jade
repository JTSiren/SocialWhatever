extends layout

block content
  h1 I Can't Believe It's Not Twitter!
  div
    h3= "Hello, " + user['username'] 
    form#post(action="/post", type="POST")
      input#text(type="text" placeholder="What do you have to say?" size="80" maxlength="240")

  ul.allPosts
    each post in allPosts
      li(class="postlist")
        div(class="postfield")
          a.pull-left(href="/user/"+ post.username)= post.username + " "
          p(class="postline")=' said - "' + post.content + '"'
            div(class="time")
              p= 'at ' + post.date
              div
                button.btn.btn-default(type="submit" class="favorite") Favorite
                  span(class="glyphicon" aria-hidden="true")
                button.btn.btn-default(type="submit" class="share") Share
                  span(class="glyphicon glyphicon-share" aria-hidden="true")
                if post.username === user['username']
                  button.btn.btn-default.remove(action='/delete', type="submit", method ='POST') Delete
                    span(class="glyphicon glyphicon-remove" aria-hidden="true")

  script(type='text/javascript').
    $( document ).ready( function(){
      
      var timestamp = Date.now();
      console.log( 'the initial timestamp is: ', timestamp);

      $('#post').submit( function(event){
          event.preventDefault();
          var url = $(this).attr('action');
          var content = { content: $(this).children('input').val() };
          $('#text').val('');
          
          $.post(url, content, function(response){ 
          });
          //console.log( '$(this): ', $(this) );
          //console.log( '$(this) action attribute: ', $(this).attr('action'))
          //console.log( 'the form content: ', content)

          console.log('I wrote this post: ', content );
        });

      function refreshPosts () {
        var newposts = []
        $.get( '/refreshPosts' ).done( function( posts ){
            //console.log( 'these are the posts the server sent back: ', posts )
            newposts = posts.map( function( post ){ 
              //console.log( 'this is a post that im mapping over: ', post);
              if ( Date.parse( post.date ) >  timestamp ){
                  return post;
                }
            }); //END OF MAP FUNCTION
            newposts=newposts.reverse();
            //console.log('this is newposts after the map function: ', newposts);
            console.log( 'the done callback is running' )
            newposts.forEach( function(post) {
               console.log('post is ', post)
              if ( post ){
                console.log( 'condition is met! ', true )
                $postList = $('<li class="postlist">');
                  $postField = $('<div class="postfield">');
                    $userName = $('<a class="pull-left" href="/user/' + post.username + '">').html( post.username + " " );
                    
                    $postLine = $('<p class="postline">').html('said - "' + post.content + '"');
                      
                    $timeDiv = $('<div class="time">')
                      $postDate = $('<p>').html('at ' + post.date);
                      
                      $buttonDiv = $('<div>');
                        $deleteButton = $('<button class="btn btn-default remove" type="submit" action="/delete" method="POST">').html('Delete');
                          $deleteGlyph = $('<span class="glyphicon glyphicon-remove" aria-hidden="true">')
                        $favoriteButton = $('<button class="btn btn-default favorite" type="submit">').html('Favorite');
                          $faveGlyph = $('<span class="glyphicon" aria-hidden="true">')
                
                //make buttons
                $favoriteButton.append($faveGlyph)
                $deleteButton.append($deleteGlyph)

                //contain buttons
                $buttonDiv.append($favoriteButton)
                $buttonDiv.append($deleteButton)

                //contain buttondiv and postdate
                $timeDiv.append($postDate)
                $timeDiv.append($buttonDiv)

                //build Postfield
                $postField.append($userName)
                $postField.append($postLine)
                $postField.append($timeDiv)
                
                //build the listItem
                $postList.append($postField)

                $('.allPosts').prepend($postList)
              }
            });
            
            $('.remove').click( deletePost );
            
            timestamp = Date.now();
            console.log('timestamp is now: ', timestamp);
          }); //END OF DONE CALLBACK
      } //END OF REFRESH FUNCTION
      window.setInterval(refreshPosts, 5000);

      function deletePost ( event ) {
        console.log( 'Ive been told to delete this!\n===========================' )
        event.preventDefault();
        var $tweet = $(this).closest('.postlist');
        //var $tweet = $(this).parent('div').parent('.time').parent('div').parent('li');
        var $postTime = $(this).parent('div').parent('.time').children('p').html().split( ' ' )[1];
        console.log ('post time for this tweet is: ', $postTime);
        $.post( '/delete', { time: $postTime } ).done( function(){
            $tweet.remove();
          });
      }

      $('.remove').click( deletePost );

    });




